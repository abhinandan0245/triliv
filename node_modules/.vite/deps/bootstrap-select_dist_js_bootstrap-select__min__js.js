import {
  require_jquery
} from "./chunk-WB42QNLU.js";
import {
  __commonJS
} from "./chunk-DC5AMYBS.js";

// node_modules/bootstrap-select/dist/js/bootstrap-select.min.js
var require_bootstrap_select_min = __commonJS({
  "node_modules/bootstrap-select/dist/js/bootstrap-select.min.js"(exports, module) {
    !function(e, t) {
      void 0 === e && void 0 !== window && (e = window), "function" == typeof define && define.amd ? define(["jquery"], function(e2) {
        return t(e2);
      }) : "object" == typeof module && module.exports ? module.exports = t(require_jquery()) : t(e.jQuery);
    }(exports, function(e) {
      !function(P) {
        "use strict";
        var d = ["sanitize", "whiteList", "sanitizeFn"], r = ["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"], e2 = { "*": ["class", "dir", "id", "lang", "role", "tabindex", "style", /^aria-[\w-]*$/i], a: ["target", "href", "title", "rel"], area: [], b: [], br: [], col: [], code: [], div: [], em: [], hr: [], h1: [], h2: [], h3: [], h4: [], h5: [], h6: [], i: [], img: ["src", "alt", "title", "width", "height"], li: [], ol: [], p: [], pre: [], s: [], small: [], span: [], sub: [], sup: [], strong: [], u: [], ul: [] }, l = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi, a = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;
        function v(e3, t2) {
          var i2 = e3.nodeName.toLowerCase();
          if (-1 !== P.inArray(i2, t2)) return -1 === P.inArray(i2, r) || Boolean(e3.nodeValue.match(l) || e3.nodeValue.match(a));
          for (var s2 = P(t2).filter(function(e4, t3) {
            return t3 instanceof RegExp;
          }), n2 = 0, o2 = s2.length; n2 < o2; n2++) if (i2.match(s2[n2])) return true;
          return false;
        }
        function W(e3, t2, i2) {
          if (i2 && "function" == typeof i2) return i2(e3);
          for (var s2 = Object.keys(t2), n2 = 0, o2 = e3.length; n2 < o2; n2++) for (var r2 = e3[n2].querySelectorAll("*"), l2 = 0, a2 = r2.length; l2 < a2; l2++) {
            var c2 = r2[l2], d2 = c2.nodeName.toLowerCase();
            if (-1 !== s2.indexOf(d2)) for (var h2 = [].slice.call(c2.attributes), p2 = [].concat(t2["*"] || [], t2[d2] || []), u2 = 0, f2 = h2.length; u2 < f2; u2++) {
              var m2 = h2[u2];
              v(m2, p2) || c2.removeAttribute(m2.nodeName);
            }
            else c2.parentNode.removeChild(c2);
          }
        }
        "classList" in document.createElement("_") || function(e3) {
          if ("Element" in e3) {
            var t2 = "classList", i2 = "prototype", s2 = e3.Element[i2], n2 = Object, o2 = function() {
              var i3 = P(this);
              return { add: function(e4) {
                return e4 = Array.prototype.slice.call(arguments).join(" "), i3.addClass(e4);
              }, remove: function(e4) {
                return e4 = Array.prototype.slice.call(arguments).join(" "), i3.removeClass(e4);
              }, toggle: function(e4, t3) {
                return i3.toggleClass(e4, t3);
              }, contains: function(e4) {
                return i3.hasClass(e4);
              } };
            };
            if (n2.defineProperty) {
              var r2 = { get: o2, enumerable: true, configurable: true };
              try {
                n2.defineProperty(s2, t2, r2);
              } catch (e4) {
                void 0 !== e4.number && -2146823252 !== e4.number || (r2.enumerable = false, n2.defineProperty(s2, t2, r2));
              }
            } else n2[i2].__defineGetter__ && s2.__defineGetter__(t2, o2);
          }
        }(window);
        var t, c, i = document.createElement("_");
        if (i.classList.add("c1", "c2"), !i.classList.contains("c2")) {
          var s = DOMTokenList.prototype.add, n = DOMTokenList.prototype.remove;
          DOMTokenList.prototype.add = function() {
            Array.prototype.forEach.call(arguments, s.bind(this));
          }, DOMTokenList.prototype.remove = function() {
            Array.prototype.forEach.call(arguments, n.bind(this));
          };
        }
        if (i.classList.toggle("c3", false), i.classList.contains("c3")) {
          var o = DOMTokenList.prototype.toggle;
          DOMTokenList.prototype.toggle = function(e3, t2) {
            return 1 in arguments && !this.contains(e3) == !t2 ? t2 : o.call(this, e3);
          };
        }
        function h(e3) {
          if (null == this) throw new TypeError();
          var t2 = String(this);
          if (e3 && "[object RegExp]" == c.call(e3)) throw new TypeError();
          var i2 = t2.length, s2 = String(e3), n2 = s2.length, o2 = 1 < arguments.length ? arguments[1] : void 0, r2 = o2 ? Number(o2) : 0;
          r2 != r2 && (r2 = 0);
          var l2 = Math.min(Math.max(r2, 0), i2);
          if (i2 < n2 + l2) return false;
          for (var a2 = -1; ++a2 < n2; ) if (t2.charCodeAt(l2 + a2) != s2.charCodeAt(a2)) return false;
          return true;
        }
        function O(e3, t2) {
          var i2, s2 = e3.selectedOptions, n2 = [];
          if (t2) {
            for (var o2 = 0, r2 = s2.length; o2 < r2; o2++) (i2 = s2[o2]).disabled || "OPTGROUP" === i2.parentNode.tagName && i2.parentNode.disabled || n2.push(i2);
            return n2;
          }
          return s2;
        }
        function z(e3, t2) {
          for (var i2, s2 = [], n2 = t2 || e3.selectedOptions, o2 = 0, r2 = n2.length; o2 < r2; o2++) (i2 = n2[o2]).disabled || "OPTGROUP" === i2.parentNode.tagName && i2.parentNode.disabled || s2.push(i2.value);
          return e3.multiple ? s2 : s2.length ? s2[0] : null;
        }
        i = null, String.prototype.startsWith || (t = function() {
          try {
            var e3 = {}, t2 = Object.defineProperty, i2 = t2(e3, e3, e3) && t2;
          } catch (e4) {
          }
          return i2;
        }(), c = {}.toString, t ? t(String.prototype, "startsWith", { value: h, configurable: true, writable: true }) : String.prototype.startsWith = h), Object.keys || (Object.keys = function(e3, t2, i2) {
          for (t2 in i2 = [], e3) i2.hasOwnProperty.call(e3, t2) && i2.push(t2);
          return i2;
        }), HTMLSelectElement && !HTMLSelectElement.prototype.hasOwnProperty("selectedOptions") && Object.defineProperty(HTMLSelectElement.prototype, "selectedOptions", { get: function() {
          return this.querySelectorAll(":checked");
        } });
        var p = { useDefault: false, _set: P.valHooks.select.set };
        P.valHooks.select.set = function(e3, t2) {
          return t2 && !p.useDefault && P(e3).data("selected", true), p._set.apply(this, arguments);
        };
        var T = null, u = function() {
          try {
            return new Event("change"), true;
          } catch (e3) {
            return false;
          }
        }();
        function k(e3, t2, i2, s2) {
          for (var n2 = ["display", "subtext", "tokens"], o2 = false, r2 = 0; r2 < n2.length; r2++) {
            var l2 = n2[r2], a2 = e3[l2];
            if (a2 && (a2 = a2.toString(), "display" === l2 && (a2 = a2.replace(/<[^>]+>/g, "")), s2 && (a2 = w(a2)), a2 = a2.toUpperCase(), o2 = "contains" === i2 ? 0 <= a2.indexOf(t2) : a2.startsWith(t2))) break;
          }
          return o2;
        }
        function N(e3) {
          return parseInt(e3, 10) || 0;
        }
        P.fn.triggerNative = function(e3) {
          var t2, i2 = this[0];
          i2.dispatchEvent ? (u ? t2 = new Event(e3, { bubbles: true }) : (t2 = document.createEvent("Event")).initEvent(e3, true, false), i2.dispatchEvent(t2)) : i2.fireEvent ? ((t2 = document.createEventObject()).eventType = e3, i2.fireEvent("on" + e3, t2)) : this.trigger(e3);
        };
        var f = { "À": "A", "Á": "A", "Â": "A", "Ã": "A", "Ä": "A", "Å": "A", "à": "a", "á": "a", "â": "a", "ã": "a", "ä": "a", "å": "a", "Ç": "C", "ç": "c", "Ð": "D", "ð": "d", "È": "E", "É": "E", "Ê": "E", "Ë": "E", "è": "e", "é": "e", "ê": "e", "ë": "e", "Ì": "I", "Í": "I", "Î": "I", "Ï": "I", "ì": "i", "í": "i", "î": "i", "ï": "i", "Ñ": "N", "ñ": "n", "Ò": "O", "Ó": "O", "Ô": "O", "Õ": "O", "Ö": "O", "Ø": "O", "ò": "o", "ó": "o", "ô": "o", "õ": "o", "ö": "o", "ø": "o", "Ù": "U", "Ú": "U", "Û": "U", "Ü": "U", "ù": "u", "ú": "u", "û": "u", "ü": "u", "Ý": "Y", "ý": "y", "ÿ": "y", "Æ": "Ae", "æ": "ae", "Þ": "Th", "þ": "th", "ß": "ss", "Ā": "A", "Ă": "A", "Ą": "A", "ā": "a", "ă": "a", "ą": "a", "Ć": "C", "Ĉ": "C", "Ċ": "C", "Č": "C", "ć": "c", "ĉ": "c", "ċ": "c", "č": "c", "Ď": "D", "Đ": "D", "ď": "d", "đ": "d", "Ē": "E", "Ĕ": "E", "Ė": "E", "Ę": "E", "Ě": "E", "ē": "e", "ĕ": "e", "ė": "e", "ę": "e", "ě": "e", "Ĝ": "G", "Ğ": "G", "Ġ": "G", "Ģ": "G", "ĝ": "g", "ğ": "g", "ġ": "g", "ģ": "g", "Ĥ": "H", "Ħ": "H", "ĥ": "h", "ħ": "h", "Ĩ": "I", "Ī": "I", "Ĭ": "I", "Į": "I", "İ": "I", "ĩ": "i", "ī": "i", "ĭ": "i", "į": "i", "ı": "i", "Ĵ": "J", "ĵ": "j", "Ķ": "K", "ķ": "k", "ĸ": "k", "Ĺ": "L", "Ļ": "L", "Ľ": "L", "Ŀ": "L", "Ł": "L", "ĺ": "l", "ļ": "l", "ľ": "l", "ŀ": "l", "ł": "l", "Ń": "N", "Ņ": "N", "Ň": "N", "Ŋ": "N", "ń": "n", "ņ": "n", "ň": "n", "ŋ": "n", "Ō": "O", "Ŏ": "O", "Ő": "O", "ō": "o", "ŏ": "o", "ő": "o", "Ŕ": "R", "Ŗ": "R", "Ř": "R", "ŕ": "r", "ŗ": "r", "ř": "r", "Ś": "S", "Ŝ": "S", "Ş": "S", "Š": "S", "ś": "s", "ŝ": "s", "ş": "s", "š": "s", "Ţ": "T", "Ť": "T", "Ŧ": "T", "ţ": "t", "ť": "t", "ŧ": "t", "Ũ": "U", "Ū": "U", "Ŭ": "U", "Ů": "U", "Ű": "U", "Ų": "U", "ũ": "u", "ū": "u", "ŭ": "u", "ů": "u", "ű": "u", "ų": "u", "Ŵ": "W", "ŵ": "w", "Ŷ": "Y", "ŷ": "y", "Ÿ": "Y", "Ź": "Z", "Ż": "Z", "Ž": "Z", "ź": "z", "ż": "z", "ž": "z", "Ĳ": "IJ", "ĳ": "ij", "Œ": "Oe", "œ": "oe", "ŉ": "'n", "ſ": "s" }, m = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, g = RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\u1ab0-\\u1aff\\u1dc0-\\u1dff]", "g");
        function b(e3) {
          return f[e3];
        }
        function w(e3) {
          return (e3 = e3.toString()) && e3.replace(m, b).replace(g, "");
        }
        var I, x, y, $, S = (I = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#x27;", "`": "&#x60;" }, x = "(?:" + Object.keys(I).join("|") + ")", y = RegExp(x), $ = RegExp(x, "g"), function(e3) {
          return e3 = null == e3 ? "" : "" + e3, y.test(e3) ? e3.replace($, E) : e3;
        });
        function E(e3) {
          return I[e3];
        }
        var C = { 32: " ", 48: "0", 49: "1", 50: "2", 51: "3", 52: "4", 53: "5", 54: "6", 55: "7", 56: "8", 57: "9", 59: ";", 65: "A", 66: "B", 67: "C", 68: "D", 69: "E", 70: "F", 71: "G", 72: "H", 73: "I", 74: "J", 75: "K", 76: "L", 77: "M", 78: "N", 79: "O", 80: "P", 81: "Q", 82: "R", 83: "S", 84: "T", 85: "U", 86: "V", 87: "W", 88: "X", 89: "Y", 90: "Z", 96: "0", 97: "1", 98: "2", 99: "3", 100: "4", 101: "5", 102: "6", 103: "7", 104: "8", 105: "9" }, A = 27, L = 13, D = 32, H = 9, B = 38, R = 40, M = { success: false, major: "3" };
        try {
          M.full = (P.fn.dropdown.Constructor.VERSION || "").split(" ")[0].split("."), M.major = M.full[0], M.success = true;
        } catch (e3) {
        }
        var U = 0, j = ".bs.select", V = { DISABLED: "disabled", DIVIDER: "divider", SHOW: "open", DROPUP: "dropup", MENU: "dropdown-menu", MENURIGHT: "dropdown-menu-right", MENULEFT: "dropdown-menu-left", BUTTONCLASS: "btn-default", POPOVERHEADER: "popover-title", ICONBASE: "glyphicon", TICKICON: "glyphicon-ok" }, F = { MENU: "." + V.MENU }, _ = { div: document.createElement("div"), span: document.createElement("span"), i: document.createElement("i"), subtext: document.createElement("small"), a: document.createElement("a"), li: document.createElement("li"), whitespace: document.createTextNode(" "), fragment: document.createDocumentFragment() };
        _.noResults = _.li.cloneNode(false), _.noResults.className = "no-results", _.a.setAttribute("role", "option"), _.a.className = "dropdown-item", _.subtext.className = "text-muted", _.text = _.span.cloneNode(false), _.text.className = "text", _.checkMark = _.span.cloneNode(false);
        var G = new RegExp(B + "|" + R), q = new RegExp("^" + H + "$|" + A), K = { li: function(e3, t2, i2) {
          var s2 = _.li.cloneNode(false);
          return e3 && (1 === e3.nodeType || 11 === e3.nodeType ? s2.appendChild(e3) : s2.innerHTML = e3), void 0 !== t2 && "" !== t2 && (s2.className = t2), null != i2 && s2.classList.add("optgroup-" + i2), s2;
        }, a: function(e3, t2, i2) {
          var s2 = _.a.cloneNode(true);
          return e3 && (11 === e3.nodeType ? s2.appendChild(e3) : s2.insertAdjacentHTML("beforeend", e3)), void 0 !== t2 && "" !== t2 && s2.classList.add.apply(s2.classList, t2.split(/\s+/)), i2 && s2.setAttribute("style", i2), s2;
        }, text: function(e3, t2) {
          var i2, s2, n2 = _.text.cloneNode(false);
          if (e3.content) n2.innerHTML = e3.content;
          else {
            if (n2.textContent = e3.text, e3.icon) {
              var o2 = _.whitespace.cloneNode(false);
              (s2 = (true === t2 ? _.i : _.span).cloneNode(false)).className = this.options.iconBase + " " + e3.icon, _.fragment.appendChild(s2), _.fragment.appendChild(o2);
            }
            e3.subtext && ((i2 = _.subtext.cloneNode(false)).textContent = e3.subtext, n2.appendChild(i2));
          }
          if (true === t2) for (; 0 < n2.childNodes.length; ) _.fragment.appendChild(n2.childNodes[0]);
          else _.fragment.appendChild(n2);
          return _.fragment;
        }, label: function(e3) {
          var t2, i2, s2 = _.text.cloneNode(false);
          if (s2.innerHTML = e3.display, e3.icon) {
            var n2 = _.whitespace.cloneNode(false);
            (i2 = _.span.cloneNode(false)).className = this.options.iconBase + " " + e3.icon, _.fragment.appendChild(i2), _.fragment.appendChild(n2);
          }
          return e3.subtext && ((t2 = _.subtext.cloneNode(false)).textContent = e3.subtext, s2.appendChild(t2)), _.fragment.appendChild(s2), _.fragment;
        } };
        var Y = function(e3, t2) {
          var i2 = this;
          p.useDefault || (P.valHooks.select.set = p._set, p.useDefault = true), this.$element = P(e3), this.$newElement = null, this.$button = null, this.$menu = null, this.options = t2, this.selectpicker = { main: {}, search: {}, current: {}, view: {}, isSearching: false, keydown: { keyHistory: "", resetKeyHistory: { start: function() {
            return setTimeout(function() {
              i2.selectpicker.keydown.keyHistory = "";
            }, 800);
          } } } }, this.sizeInfo = {}, null === this.options.title && (this.options.title = this.$element.attr("title"));
          var s2 = this.options.windowPadding;
          "number" == typeof s2 && (this.options.windowPadding = [s2, s2, s2, s2]), this.val = Y.prototype.val, this.render = Y.prototype.render, this.refresh = Y.prototype.refresh, this.setStyle = Y.prototype.setStyle, this.selectAll = Y.prototype.selectAll, this.deselectAll = Y.prototype.deselectAll, this.destroy = Y.prototype.destroy, this.remove = Y.prototype.remove, this.show = Y.prototype.show, this.hide = Y.prototype.hide, this.init();
        };
        function Z(e3) {
          var l2, a2 = arguments, c2 = e3;
          if ([].shift.apply(a2), !M.success) {
            try {
              M.full = (P.fn.dropdown.Constructor.VERSION || "").split(" ")[0].split(".");
            } catch (e4) {
              Y.BootstrapVersion ? M.full = Y.BootstrapVersion.split(" ")[0].split(".") : (M.full = [M.major, "0", "0"], console.warn("There was an issue retrieving Bootstrap's version. Ensure Bootstrap is being loaded before bootstrap-select and there is no namespace collision. If loading Bootstrap asynchronously, the version may need to be manually specified via $.fn.selectpicker.Constructor.BootstrapVersion.", e4));
            }
            M.major = M.full[0], M.success = true;
          }
          if ("4" === M.major) {
            var t2 = [];
            Y.DEFAULTS.style === V.BUTTONCLASS && t2.push({ name: "style", className: "BUTTONCLASS" }), Y.DEFAULTS.iconBase === V.ICONBASE && t2.push({ name: "iconBase", className: "ICONBASE" }), Y.DEFAULTS.tickIcon === V.TICKICON && t2.push({ name: "tickIcon", className: "TICKICON" }), V.DIVIDER = "dropdown-divider", V.SHOW = "show", V.BUTTONCLASS = "btn-light", V.POPOVERHEADER = "popover-header", V.ICONBASE = "", V.TICKICON = "bs-ok-default";
            for (var i2 = 0; i2 < t2.length; i2++) {
              e3 = t2[i2];
              Y.DEFAULTS[e3.name] = V[e3.className];
            }
          }
          var s2 = this.each(function() {
            var e4 = P(this);
            if (e4.is("select")) {
              var t3 = e4.data("selectpicker"), i3 = "object" == typeof c2 && c2;
              if (t3) {
                if (i3) for (var s3 in i3) Object.prototype.hasOwnProperty.call(i3, s3) && (t3.options[s3] = i3[s3]);
              } else {
                var n2 = e4.data();
                for (var o2 in n2) Object.prototype.hasOwnProperty.call(n2, o2) && -1 !== P.inArray(o2, d) && delete n2[o2];
                var r2 = P.extend({}, Y.DEFAULTS, P.fn.selectpicker.defaults || {}, n2, i3);
                r2.template = P.extend({}, Y.DEFAULTS.template, P.fn.selectpicker.defaults ? P.fn.selectpicker.defaults.template : {}, n2.template, i3.template), e4.data("selectpicker", t3 = new Y(this, r2));
              }
              "string" == typeof c2 && (l2 = t3[c2] instanceof Function ? t3[c2].apply(t3, a2) : t3.options[c2]);
            }
          });
          return void 0 !== l2 ? l2 : s2;
        }
        Y.VERSION = "1.13.18", Y.DEFAULTS = { noneSelectedText: "Nothing selected", noneResultsText: "No results matched {0}", countSelectedText: function(e3, t2) {
          return 1 == e3 ? "{0} item selected" : "{0} items selected";
        }, maxOptionsText: function(e3, t2) {
          return [1 == e3 ? "Limit reached ({n} item max)" : "Limit reached ({n} items max)", 1 == t2 ? "Group limit reached ({n} item max)" : "Group limit reached ({n} items max)"];
        }, selectAllText: "Select All", deselectAllText: "Deselect All", doneButton: false, doneButtonText: "Close", multipleSeparator: ", ", styleBase: "btn", style: V.BUTTONCLASS, size: "auto", title: null, selectedTextFormat: "values", width: false, container: false, hideDisabled: false, showSubtext: false, showIcon: true, showContent: true, dropupAuto: true, header: false, liveSearch: false, liveSearchPlaceholder: null, liveSearchNormalize: false, liveSearchStyle: "contains", actionsBox: false, iconBase: V.ICONBASE, tickIcon: V.TICKICON, showTick: false, template: { caret: '<span class="caret"></span>' }, maxOptions: false, mobile: false, selectOnTab: false, dropdownAlignRight: false, windowPadding: 0, virtualScroll: 600, display: false, sanitize: true, sanitizeFn: null, whiteList: e2 }, Y.prototype = { constructor: Y, init: function() {
          var i2 = this, e3 = this.$element.attr("id"), t2 = this.$element[0], s2 = t2.form;
          U++, this.selectId = "bs-select-" + U, t2.classList.add("bs-select-hidden"), this.multiple = this.$element.prop("multiple"), this.autofocus = this.$element.prop("autofocus"), t2.classList.contains("show-tick") && (this.options.showTick = true), this.$newElement = this.createDropdown(), this.buildData(), this.$element.after(this.$newElement).prependTo(this.$newElement), s2 && null === t2.form && (s2.id || (s2.id = "form-" + this.selectId), t2.setAttribute("form", s2.id)), this.$button = this.$newElement.children("button"), this.$menu = this.$newElement.children(F.MENU), this.$menuInner = this.$menu.children(".inner"), this.$searchbox = this.$menu.find("input"), t2.classList.remove("bs-select-hidden"), true === this.options.dropdownAlignRight && this.$menu[0].classList.add(V.MENURIGHT), void 0 !== e3 && this.$button.attr("data-id", e3), this.checkDisabled(), this.clickListener(), this.options.liveSearch ? (this.liveSearchListener(), this.focusedParent = this.$searchbox[0]) : this.focusedParent = this.$menuInner[0], this.setStyle(), this.render(), this.setWidth(), this.options.container ? this.selectPosition() : this.$element.on("hide" + j, function() {
            if (i2.isVirtual()) {
              var e4 = i2.$menuInner[0], t3 = e4.firstChild.cloneNode(false);
              e4.replaceChild(t3, e4.firstChild), e4.scrollTop = 0;
            }
          }), this.$menu.data("this", this), this.$newElement.data("this", this), this.options.mobile && this.mobile(), this.$newElement.on({ "hide.bs.dropdown": function(e4) {
            i2.$element.trigger("hide" + j, e4);
          }, "hidden.bs.dropdown": function(e4) {
            i2.$element.trigger("hidden" + j, e4);
          }, "show.bs.dropdown": function(e4) {
            i2.$element.trigger("show" + j, e4);
          }, "shown.bs.dropdown": function(e4) {
            i2.$element.trigger("shown" + j, e4);
          } }), t2.hasAttribute("required") && this.$element.on("invalid" + j, function() {
            i2.$button[0].classList.add("bs-invalid"), i2.$element.on("shown" + j + ".invalid", function() {
              i2.$element.val(i2.$element.val()).off("shown" + j + ".invalid");
            }).on("rendered" + j, function() {
              this.validity.valid && i2.$button[0].classList.remove("bs-invalid"), i2.$element.off("rendered" + j);
            }), i2.$button.on("blur" + j, function() {
              i2.$element.trigger("focus").trigger("blur"), i2.$button.off("blur" + j);
            });
          }), setTimeout(function() {
            i2.buildList(), i2.$element.trigger("loaded" + j);
          });
        }, createDropdown: function() {
          var e3 = this.multiple || this.options.showTick ? " show-tick" : "", t2 = this.multiple ? ' aria-multiselectable="true"' : "", i2 = "", s2 = this.autofocus ? " autofocus" : "";
          M.major < 4 && this.$element.parent().hasClass("input-group") && (i2 = " input-group-btn");
          var n2, o2 = "", r2 = "", l2 = "", a2 = "";
          return this.options.header && (o2 = '<div class="' + V.POPOVERHEADER + '"><button type="button" class="close" aria-hidden="true">&times;</button>' + this.options.header + "</div>"), this.options.liveSearch && (r2 = '<div class="bs-searchbox"><input type="search" class="form-control" autocomplete="off"' + (null === this.options.liveSearchPlaceholder ? "" : ' placeholder="' + S(this.options.liveSearchPlaceholder) + '"') + ' role="combobox" aria-label="Search" aria-controls="' + this.selectId + '" aria-autocomplete="list"></div>'), this.multiple && this.options.actionsBox && (l2 = '<div class="bs-actionsbox"><div class="btn-group btn-group-sm btn-block"><button type="button" class="actions-btn bs-select-all btn ' + V.BUTTONCLASS + '">' + this.options.selectAllText + '</button><button type="button" class="actions-btn bs-deselect-all btn ' + V.BUTTONCLASS + '">' + this.options.deselectAllText + "</button></div></div>"), this.multiple && this.options.doneButton && (a2 = '<div class="bs-donebutton"><div class="btn-group btn-block"><button type="button" class="btn btn-sm ' + V.BUTTONCLASS + '">' + this.options.doneButtonText + "</button></div></div>"), n2 = '<div class="dropdown bootstrap-select' + e3 + i2 + '"><button type="button" tabindex="-1" class="' + this.options.styleBase + ' dropdown-toggle" ' + ("static" === this.options.display ? 'data-display="static"' : "") + 'data-toggle="dropdown"' + s2 + ' role="combobox" aria-owns="' + this.selectId + '" aria-haspopup="listbox" aria-expanded="false"><div class="filter-option"><div class="filter-option-inner"><div class="filter-option-inner-inner"></div></div> </div>' + ("4" === M.major ? "" : '<span class="bs-caret">' + this.options.template.caret + "</span>") + '</button><div class="' + V.MENU + " " + ("4" === M.major ? "" : V.SHOW) + '">' + o2 + r2 + l2 + '<div class="inner ' + V.SHOW + '" role="listbox" id="' + this.selectId + '" tabindex="-1" ' + t2 + '><ul class="' + V.MENU + " inner " + ("4" === M.major ? V.SHOW : "") + '" role="presentation"></ul></div>' + a2 + "</div></div>", P(n2);
        }, setPositionData: function() {
          this.selectpicker.view.canHighlight = [], this.selectpicker.view.size = 0, this.selectpicker.view.firstHighlightIndex = false;
          for (var e3 = 0; e3 < this.selectpicker.current.data.length; e3++) {
            var t2 = this.selectpicker.current.data[e3], i2 = true;
            "divider" === t2.type ? (i2 = false, t2.height = this.sizeInfo.dividerHeight) : "optgroup-label" === t2.type ? (i2 = false, t2.height = this.sizeInfo.dropdownHeaderHeight) : t2.height = this.sizeInfo.liHeight, t2.disabled && (i2 = false), this.selectpicker.view.canHighlight.push(i2), i2 && (this.selectpicker.view.size++, t2.posinset = this.selectpicker.view.size, false === this.selectpicker.view.firstHighlightIndex && (this.selectpicker.view.firstHighlightIndex = e3)), t2.position = (0 === e3 ? 0 : this.selectpicker.current.data[e3 - 1].position) + t2.height;
          }
        }, isVirtual: function() {
          return false !== this.options.virtualScroll && this.selectpicker.main.elements.length >= this.options.virtualScroll || true === this.options.virtualScroll;
        }, createView: function(N2, e3, t2) {
          var A2, L2, D2 = this, i2 = 0, H2 = [];
          if (this.selectpicker.isSearching = N2, this.selectpicker.current = N2 ? this.selectpicker.search : this.selectpicker.main, this.setPositionData(), e3) {
            if (t2) i2 = this.$menuInner[0].scrollTop;
            else if (!D2.multiple) {
              var s2 = D2.$element[0], n2 = (s2.options[s2.selectedIndex] || {}).liIndex;
              if ("number" == typeof n2 && false !== D2.options.size) {
                var o2 = D2.selectpicker.main.data[n2], r2 = o2 && o2.position;
                r2 && (i2 = r2 - (D2.sizeInfo.menuInnerHeight + D2.sizeInfo.liHeight) / 2);
              }
            }
          }
          function l2(e4, t3) {
            var i3, s3, n3, o3, r3, l3, a2, c2, d2 = D2.selectpicker.current.elements.length, h2 = [], p2 = true, u2 = D2.isVirtual();
            D2.selectpicker.view.scrollTop = e4, i3 = Math.ceil(D2.sizeInfo.menuInnerHeight / D2.sizeInfo.liHeight * 1.5), s3 = Math.round(d2 / i3) || 1;
            for (var f2 = 0; f2 < s3; f2++) {
              var m2 = (f2 + 1) * i3;
              if (f2 === s3 - 1 && (m2 = d2), h2[f2] = [f2 * i3 + (f2 ? 1 : 0), m2], !d2) break;
              void 0 === r3 && e4 - 1 <= D2.selectpicker.current.data[m2 - 1].position - D2.sizeInfo.menuInnerHeight && (r3 = f2);
            }
            if (void 0 === r3 && (r3 = 0), l3 = [D2.selectpicker.view.position0, D2.selectpicker.view.position1], n3 = Math.max(0, r3 - 1), o3 = Math.min(s3 - 1, r3 + 1), D2.selectpicker.view.position0 = false === u2 ? 0 : Math.max(0, h2[n3][0]) || 0, D2.selectpicker.view.position1 = false === u2 ? d2 : Math.min(d2, h2[o3][1]) || 0, a2 = l3[0] !== D2.selectpicker.view.position0 || l3[1] !== D2.selectpicker.view.position1, void 0 !== D2.activeIndex && (L2 = D2.selectpicker.main.elements[D2.prevActiveIndex], H2 = D2.selectpicker.main.elements[D2.activeIndex], A2 = D2.selectpicker.main.elements[D2.selectedIndex], t3 && (D2.activeIndex !== D2.selectedIndex && D2.defocusItem(H2), D2.activeIndex = void 0), D2.activeIndex && D2.activeIndex !== D2.selectedIndex && D2.defocusItem(A2)), void 0 !== D2.prevActiveIndex && D2.prevActiveIndex !== D2.activeIndex && D2.prevActiveIndex !== D2.selectedIndex && D2.defocusItem(L2), (t3 || a2) && (c2 = D2.selectpicker.view.visibleElements ? D2.selectpicker.view.visibleElements.slice() : [], D2.selectpicker.view.visibleElements = false === u2 ? D2.selectpicker.current.elements : D2.selectpicker.current.elements.slice(D2.selectpicker.view.position0, D2.selectpicker.view.position1), D2.setOptionStatus(), (N2 || false === u2 && t3) && (p2 = !function(e5, i4) {
              return e5.length === i4.length && e5.every(function(e6, t4) {
                return e6 === i4[t4];
              });
            }(c2, D2.selectpicker.view.visibleElements)), (t3 || true === u2) && p2)) {
              var v2, g2, b2 = D2.$menuInner[0], w2 = document.createDocumentFragment(), I2 = b2.firstChild.cloneNode(false), x2 = D2.selectpicker.view.visibleElements, k2 = [];
              b2.replaceChild(I2, b2.firstChild);
              f2 = 0;
              for (var y2 = x2.length; f2 < y2; f2++) {
                var $2, S2, E2 = x2[f2];
                D2.options.sanitize && ($2 = E2.lastChild) && (S2 = D2.selectpicker.current.data[f2 + D2.selectpicker.view.position0]) && S2.content && !S2.sanitized && (k2.push($2), S2.sanitized = true), w2.appendChild(E2);
              }
              if (D2.options.sanitize && k2.length && W(k2, D2.options.whiteList, D2.options.sanitizeFn), true === u2 ? (v2 = 0 === D2.selectpicker.view.position0 ? 0 : D2.selectpicker.current.data[D2.selectpicker.view.position0 - 1].position, g2 = D2.selectpicker.view.position1 > d2 - 1 ? 0 : D2.selectpicker.current.data[d2 - 1].position - D2.selectpicker.current.data[D2.selectpicker.view.position1 - 1].position, b2.firstChild.style.marginTop = v2 + "px", b2.firstChild.style.marginBottom = g2 + "px") : (b2.firstChild.style.marginTop = 0, b2.firstChild.style.marginBottom = 0), b2.firstChild.appendChild(w2), true === u2 && D2.sizeInfo.hasScrollBar) {
                var C2 = b2.firstChild.offsetWidth;
                if (t3 && C2 < D2.sizeInfo.menuInnerInnerWidth && D2.sizeInfo.totalMenuWidth > D2.sizeInfo.selectWidth) b2.firstChild.style.minWidth = D2.sizeInfo.menuInnerInnerWidth + "px";
                else if (C2 > D2.sizeInfo.menuInnerInnerWidth) {
                  D2.$menu[0].style.minWidth = 0;
                  var O2 = b2.firstChild.offsetWidth;
                  O2 > D2.sizeInfo.menuInnerInnerWidth && (D2.sizeInfo.menuInnerInnerWidth = O2, b2.firstChild.style.minWidth = D2.sizeInfo.menuInnerInnerWidth + "px"), D2.$menu[0].style.minWidth = "";
                }
              }
            }
            if (D2.prevActiveIndex = D2.activeIndex, D2.options.liveSearch) {
              if (N2 && t3) {
                var z2, T2 = 0;
                D2.selectpicker.view.canHighlight[T2] || (T2 = 1 + D2.selectpicker.view.canHighlight.slice(1).indexOf(true)), z2 = D2.selectpicker.view.visibleElements[T2], D2.defocusItem(D2.selectpicker.view.currentActive), D2.activeIndex = (D2.selectpicker.current.data[T2] || {}).index, D2.focusItem(z2);
              }
            } else D2.$menuInner.trigger("focus");
          }
          l2(i2, true), this.$menuInner.off("scroll.createView").on("scroll.createView", function(e4, t3) {
            D2.noScroll || l2(this.scrollTop, t3), D2.noScroll = false;
          }), P(window).off("resize" + j + "." + this.selectId + ".createView").on("resize" + j + "." + this.selectId + ".createView", function() {
            D2.$newElement.hasClass(V.SHOW) && l2(D2.$menuInner[0].scrollTop);
          });
        }, focusItem: function(e3, t2, i2) {
          if (e3) {
            t2 = t2 || this.selectpicker.main.data[this.activeIndex];
            var s2 = e3.firstChild;
            s2 && (s2.setAttribute("aria-setsize", this.selectpicker.view.size), s2.setAttribute("aria-posinset", t2.posinset), true !== i2 && (this.focusedParent.setAttribute("aria-activedescendant", s2.id), e3.classList.add("active"), s2.classList.add("active")));
          }
        }, defocusItem: function(e3) {
          e3 && (e3.classList.remove("active"), e3.firstChild && e3.firstChild.classList.remove("active"));
        }, setPlaceholder: function() {
          var e3 = this, t2 = false;
          if (this.options.title && !this.multiple) {
            this.selectpicker.view.titleOption || (this.selectpicker.view.titleOption = document.createElement("option")), t2 = true;
            var i2 = this.$element[0], s2 = false, n2 = !this.selectpicker.view.titleOption.parentNode, o2 = i2.selectedIndex, r2 = i2.options[o2], l2 = window.performance && window.performance.getEntriesByType("navigation"), a2 = l2 && l2.length ? "back_forward" !== l2[0].type : 2 !== window.performance.navigation.type;
            n2 && (this.selectpicker.view.titleOption.className = "bs-title-option", this.selectpicker.view.titleOption.value = "", s2 = !r2 || 0 === o2 && false === r2.defaultSelected && void 0 === this.$element.data("selected")), !n2 && 0 === this.selectpicker.view.titleOption.index || i2.insertBefore(this.selectpicker.view.titleOption, i2.firstChild), s2 && a2 ? i2.selectedIndex = 0 : "complete" !== document.readyState && window.addEventListener("pageshow", function() {
              e3.selectpicker.view.displayedValue !== i2.value && e3.render();
            });
          }
          return t2;
        }, buildData: function() {
          var p2 = ':not([hidden]):not([data-hidden="true"])', u2 = [], f2 = 0, m2 = this.setPlaceholder() ? 1 : 0;
          this.options.hideDisabled && (p2 += ":not(:disabled)");
          var e3 = this.$element[0].querySelectorAll("select > *" + p2);
          function v2(e4) {
            var t3 = u2[u2.length - 1];
            t3 && "divider" === t3.type && (t3.optID || e4.optID) || ((e4 = e4 || {}).type = "divider", u2.push(e4));
          }
          function g2(e4, t3) {
            if ((t3 = t3 || {}).divider = "true" === e4.getAttribute("data-divider"), t3.divider) v2({ optID: t3.optID });
            else {
              var i3 = u2.length, s3 = e4.style.cssText, n3 = s3 ? S(s3) : "", o2 = (e4.className || "") + (t3.optgroupClass || "");
              t3.optID && (o2 = "opt " + o2), t3.optionClass = o2.trim(), t3.inlineStyle = n3, t3.text = e4.textContent, t3.content = e4.getAttribute("data-content"), t3.tokens = e4.getAttribute("data-tokens"), t3.subtext = e4.getAttribute("data-subtext"), t3.icon = e4.getAttribute("data-icon"), e4.liIndex = i3, t3.display = t3.content || t3.text, t3.type = "option", t3.index = i3, t3.option = e4, t3.selected = !!e4.selected, t3.disabled = t3.disabled || !!e4.disabled, u2.push(t3);
            }
          }
          function t2(e4, t3) {
            var i3 = t3[e4], s3 = !(e4 - 1 < m2) && t3[e4 - 1], n3 = t3[e4 + 1], o2 = i3.querySelectorAll("option" + p2);
            if (o2.length) {
              var r2, l2, a2 = { display: S(i3.label), subtext: i3.getAttribute("data-subtext"), icon: i3.getAttribute("data-icon"), type: "optgroup-label", optgroupClass: " " + (i3.className || "") };
              f2++, s3 && v2({ optID: f2 }), a2.optID = f2, u2.push(a2);
              for (var c2 = 0, d2 = o2.length; c2 < d2; c2++) {
                var h2 = o2[c2];
                0 === c2 && (l2 = (r2 = u2.length - 1) + d2), g2(h2, { headerIndex: r2, lastIndex: l2, optID: a2.optID, optgroupClass: a2.optgroupClass, disabled: i3.disabled });
              }
              n3 && v2({ optID: f2 });
            }
          }
          for (var i2 = e3.length, s2 = m2; s2 < i2; s2++) {
            var n2 = e3[s2];
            "OPTGROUP" !== n2.tagName ? g2(n2, {}) : t2(s2, e3);
          }
          this.selectpicker.main.data = this.selectpicker.current.data = u2;
        }, buildList: function() {
          var s2 = this, e3 = this.selectpicker.main.data, n2 = [], o2 = 0;
          function t2(e4) {
            var t3, i3 = 0;
            switch (e4.type) {
              case "divider":
                t3 = K.li(false, V.DIVIDER, e4.optID ? e4.optID + "div" : void 0);
                break;
              case "option":
                (t3 = K.li(K.a(K.text.call(s2, e4), e4.optionClass, e4.inlineStyle), "", e4.optID)).firstChild && (t3.firstChild.id = s2.selectId + "-" + e4.index);
                break;
              case "optgroup-label":
                t3 = K.li(K.label.call(s2, e4), "dropdown-header" + e4.optgroupClass, e4.optID);
            }
            e4.element = t3, n2.push(t3), e4.display && (i3 += e4.display.length), e4.subtext && (i3 += e4.subtext.length), e4.icon && (i3 += 1), o2 < i3 && (o2 = i3, s2.selectpicker.view.widestOption = n2[n2.length - 1]);
          }
          !s2.options.showTick && !s2.multiple || _.checkMark.parentNode || (_.checkMark.className = this.options.iconBase + " " + s2.options.tickIcon + " check-mark", _.a.appendChild(_.checkMark));
          for (var i2 = e3.length, r2 = 0; r2 < i2; r2++) {
            t2(e3[r2]);
          }
          this.selectpicker.main.elements = this.selectpicker.current.elements = n2;
        }, findLis: function() {
          return this.$menuInner.find(".inner > li");
        }, render: function() {
          var e3, t2 = this, i2 = this.$element[0], s2 = this.setPlaceholder() && 0 === i2.selectedIndex, n2 = O(i2, this.options.hideDisabled), o2 = n2.length, r2 = this.$button[0], l2 = r2.querySelector(".filter-option-inner-inner"), a2 = document.createTextNode(this.options.multipleSeparator), c2 = _.fragment.cloneNode(false), d2 = false;
          if (r2.classList.toggle("bs-placeholder", t2.multiple ? !o2 : !z(i2, n2)), t2.multiple || 1 !== n2.length || (t2.selectpicker.view.displayedValue = z(i2, n2)), "static" === this.options.selectedTextFormat) c2 = K.text.call(this, { text: this.options.title }, true);
          else if (false === (this.multiple && -1 !== this.options.selectedTextFormat.indexOf("count") && 1 < o2 && (1 < (e3 = this.options.selectedTextFormat.split(">")).length && o2 > e3[1] || 1 === e3.length && 2 <= o2))) {
            if (!s2) {
              for (var h2 = 0; h2 < o2 && h2 < 50; h2++) {
                var p2 = n2[h2], u2 = this.selectpicker.main.data[p2.liIndex], f2 = {};
                this.multiple && 0 < h2 && c2.appendChild(a2.cloneNode(false)), p2.title ? f2.text = p2.title : u2 && (u2.content && t2.options.showContent ? (f2.content = u2.content.toString(), d2 = true) : (t2.options.showIcon && (f2.icon = u2.icon), t2.options.showSubtext && !t2.multiple && u2.subtext && (f2.subtext = " " + u2.subtext), f2.text = p2.textContent.trim())), c2.appendChild(K.text.call(this, f2, true));
              }
              49 < o2 && c2.appendChild(document.createTextNode("..."));
            }
          } else {
            var m2 = ':not([hidden]):not([data-hidden="true"]):not([data-divider="true"])';
            this.options.hideDisabled && (m2 += ":not(:disabled)");
            var v2 = this.$element[0].querySelectorAll("select > option" + m2 + ", optgroup" + m2 + " option" + m2).length, g2 = "function" == typeof this.options.countSelectedText ? this.options.countSelectedText(o2, v2) : this.options.countSelectedText;
            c2 = K.text.call(this, { text: g2.replace("{0}", o2.toString()).replace("{1}", v2.toString()) }, true);
          }
          if (null == this.options.title && (this.options.title = this.$element.attr("title")), c2.childNodes.length || (c2 = K.text.call(this, { text: void 0 !== this.options.title ? this.options.title : this.options.noneSelectedText }, true)), r2.title = c2.textContent.replace(/<[^>]*>?/g, "").trim(), this.options.sanitize && d2 && W([c2], t2.options.whiteList, t2.options.sanitizeFn), l2.innerHTML = "", l2.appendChild(c2), M.major < 4 && this.$newElement[0].classList.contains("bs3-has-addon")) {
            var b2 = r2.querySelector(".filter-expand"), w2 = l2.cloneNode(true);
            w2.className = "filter-expand", b2 ? r2.replaceChild(w2, b2) : r2.appendChild(w2);
          }
          this.$element.trigger("rendered" + j);
        }, setStyle: function(e3, t2) {
          var i2, s2 = this.$button[0], n2 = this.$newElement[0], o2 = this.options.style.trim();
          this.$element.attr("class") && this.$newElement.addClass(this.$element.attr("class").replace(/selectpicker|mobile-device|bs-select-hidden|validate\[.*\]/gi, "")), M.major < 4 && (n2.classList.add("bs3"), n2.parentNode.classList && n2.parentNode.classList.contains("input-group") && (n2.previousElementSibling || n2.nextElementSibling) && (n2.previousElementSibling || n2.nextElementSibling).classList.contains("input-group-addon") && n2.classList.add("bs3-has-addon")), i2 = e3 ? e3.trim() : o2, "add" == t2 ? i2 && s2.classList.add.apply(s2.classList, i2.split(" ")) : "remove" == t2 ? i2 && s2.classList.remove.apply(s2.classList, i2.split(" ")) : (o2 && s2.classList.remove.apply(s2.classList, o2.split(" ")), i2 && s2.classList.add.apply(s2.classList, i2.split(" ")));
        }, liHeight: function(e3) {
          if (e3 || false !== this.options.size && !Object.keys(this.sizeInfo).length) {
            var t2, i2 = _.div.cloneNode(false), s2 = _.div.cloneNode(false), n2 = _.div.cloneNode(false), o2 = document.createElement("ul"), r2 = _.li.cloneNode(false), l2 = _.li.cloneNode(false), a2 = _.a.cloneNode(false), c2 = _.span.cloneNode(false), d2 = this.options.header && 0 < this.$menu.find("." + V.POPOVERHEADER).length ? this.$menu.find("." + V.POPOVERHEADER)[0].cloneNode(true) : null, h2 = this.options.liveSearch ? _.div.cloneNode(false) : null, p2 = this.options.actionsBox && this.multiple && 0 < this.$menu.find(".bs-actionsbox").length ? this.$menu.find(".bs-actionsbox")[0].cloneNode(true) : null, u2 = this.options.doneButton && this.multiple && 0 < this.$menu.find(".bs-donebutton").length ? this.$menu.find(".bs-donebutton")[0].cloneNode(true) : null, f2 = this.$element.find("option")[0];
            if (this.sizeInfo.selectWidth = this.$newElement[0].offsetWidth, c2.className = "text", a2.className = "dropdown-item " + (f2 ? f2.className : ""), i2.className = this.$menu[0].parentNode.className + " " + V.SHOW, i2.style.width = 0, "auto" === this.options.width && (s2.style.minWidth = 0), s2.className = V.MENU + " " + V.SHOW, n2.className = "inner " + V.SHOW, o2.className = V.MENU + " inner " + ("4" === M.major ? V.SHOW : ""), r2.className = V.DIVIDER, l2.className = "dropdown-header", c2.appendChild(document.createTextNode("​")), this.selectpicker.current.data.length) for (var m2 = 0; m2 < this.selectpicker.current.data.length; m2++) {
              var v2 = this.selectpicker.current.data[m2];
              if ("option" === v2.type) {
                t2 = v2.element;
                break;
              }
            }
            else t2 = _.li.cloneNode(false), a2.appendChild(c2), t2.appendChild(a2);
            if (l2.appendChild(c2.cloneNode(true)), this.selectpicker.view.widestOption && o2.appendChild(this.selectpicker.view.widestOption.cloneNode(true)), o2.appendChild(t2), o2.appendChild(r2), o2.appendChild(l2), d2 && s2.appendChild(d2), h2) {
              var g2 = document.createElement("input");
              h2.className = "bs-searchbox", g2.className = "form-control", h2.appendChild(g2), s2.appendChild(h2);
            }
            p2 && s2.appendChild(p2), n2.appendChild(o2), s2.appendChild(n2), u2 && s2.appendChild(u2), i2.appendChild(s2), document.body.appendChild(i2);
            var b2, w2 = t2.offsetHeight, I2 = l2 ? l2.offsetHeight : 0, x2 = d2 ? d2.offsetHeight : 0, k2 = h2 ? h2.offsetHeight : 0, y2 = p2 ? p2.offsetHeight : 0, $2 = u2 ? u2.offsetHeight : 0, S2 = P(r2).outerHeight(true), E2 = !!window.getComputedStyle && window.getComputedStyle(s2), C2 = s2.offsetWidth, O2 = E2 ? null : P(s2), z2 = { vert: N(E2 ? E2.paddingTop : O2.css("paddingTop")) + N(E2 ? E2.paddingBottom : O2.css("paddingBottom")) + N(E2 ? E2.borderTopWidth : O2.css("borderTopWidth")) + N(E2 ? E2.borderBottomWidth : O2.css("borderBottomWidth")), horiz: N(E2 ? E2.paddingLeft : O2.css("paddingLeft")) + N(E2 ? E2.paddingRight : O2.css("paddingRight")) + N(E2 ? E2.borderLeftWidth : O2.css("borderLeftWidth")) + N(E2 ? E2.borderRightWidth : O2.css("borderRightWidth")) }, T2 = { vert: z2.vert + N(E2 ? E2.marginTop : O2.css("marginTop")) + N(E2 ? E2.marginBottom : O2.css("marginBottom")) + 2, horiz: z2.horiz + N(E2 ? E2.marginLeft : O2.css("marginLeft")) + N(E2 ? E2.marginRight : O2.css("marginRight")) + 2 };
            n2.style.overflowY = "scroll", b2 = s2.offsetWidth - C2, document.body.removeChild(i2), this.sizeInfo.liHeight = w2, this.sizeInfo.dropdownHeaderHeight = I2, this.sizeInfo.headerHeight = x2, this.sizeInfo.searchHeight = k2, this.sizeInfo.actionsHeight = y2, this.sizeInfo.doneButtonHeight = $2, this.sizeInfo.dividerHeight = S2, this.sizeInfo.menuPadding = z2, this.sizeInfo.menuExtras = T2, this.sizeInfo.menuWidth = C2, this.sizeInfo.menuInnerInnerWidth = C2 - z2.horiz, this.sizeInfo.totalMenuWidth = this.sizeInfo.menuWidth, this.sizeInfo.scrollBarWidth = b2, this.sizeInfo.selectHeight = this.$newElement[0].offsetHeight, this.setPositionData();
          }
        }, getSelectPosition: function() {
          var e3, t2 = P(window), i2 = this.$newElement.offset(), s2 = P(this.options.container);
          this.options.container && s2.length && !s2.is("body") ? ((e3 = s2.offset()).top += parseInt(s2.css("borderTopWidth")), e3.left += parseInt(s2.css("borderLeftWidth"))) : e3 = { top: 0, left: 0 };
          var n2 = this.options.windowPadding;
          this.sizeInfo.selectOffsetTop = i2.top - e3.top - t2.scrollTop(), this.sizeInfo.selectOffsetBot = t2.height() - this.sizeInfo.selectOffsetTop - this.sizeInfo.selectHeight - e3.top - n2[2], this.sizeInfo.selectOffsetLeft = i2.left - e3.left - t2.scrollLeft(), this.sizeInfo.selectOffsetRight = t2.width() - this.sizeInfo.selectOffsetLeft - this.sizeInfo.selectWidth - e3.left - n2[1], this.sizeInfo.selectOffsetTop -= n2[0], this.sizeInfo.selectOffsetLeft -= n2[3];
        }, setMenuSize: function(e3) {
          this.getSelectPosition();
          var t2, i2, s2, n2, o2, r2, l2, a2, c2 = this.sizeInfo.selectWidth, d2 = this.sizeInfo.liHeight, h2 = this.sizeInfo.headerHeight, p2 = this.sizeInfo.searchHeight, u2 = this.sizeInfo.actionsHeight, f2 = this.sizeInfo.doneButtonHeight, m2 = this.sizeInfo.dividerHeight, v2 = this.sizeInfo.menuPadding, g2 = 0;
          if (this.options.dropupAuto && (l2 = d2 * this.selectpicker.current.elements.length + v2.vert, a2 = this.sizeInfo.selectOffsetTop - this.sizeInfo.selectOffsetBot > this.sizeInfo.menuExtras.vert && l2 + this.sizeInfo.menuExtras.vert + 50 > this.sizeInfo.selectOffsetBot, true === this.selectpicker.isSearching && (a2 = this.selectpicker.dropup), this.$newElement.toggleClass(V.DROPUP, a2), this.selectpicker.dropup = a2), "auto" === this.options.size) n2 = 3 < this.selectpicker.current.elements.length ? 3 * this.sizeInfo.liHeight + this.sizeInfo.menuExtras.vert - 2 : 0, i2 = this.sizeInfo.selectOffsetBot - this.sizeInfo.menuExtras.vert, s2 = n2 + h2 + p2 + u2 + f2, r2 = Math.max(n2 - v2.vert, 0), this.$newElement.hasClass(V.DROPUP) && (i2 = this.sizeInfo.selectOffsetTop - this.sizeInfo.menuExtras.vert), t2 = (o2 = i2) - h2 - p2 - u2 - f2 - v2.vert;
          else if (this.options.size && "auto" != this.options.size && this.selectpicker.current.elements.length > this.options.size) {
            for (var b2 = 0; b2 < this.options.size; b2++) "divider" === this.selectpicker.current.data[b2].type && g2++;
            t2 = (i2 = d2 * this.options.size + g2 * m2 + v2.vert) - v2.vert, o2 = i2 + h2 + p2 + u2 + f2, s2 = r2 = "";
          }
          this.$menu.css({ "max-height": o2 + "px", overflow: "hidden", "min-height": s2 + "px" }), this.$menuInner.css({ "max-height": t2 + "px", "overflow-y": "auto", "min-height": r2 + "px" }), this.sizeInfo.menuInnerHeight = Math.max(t2, 1), this.selectpicker.current.data.length && this.selectpicker.current.data[this.selectpicker.current.data.length - 1].position > this.sizeInfo.menuInnerHeight && (this.sizeInfo.hasScrollBar = true, this.sizeInfo.totalMenuWidth = this.sizeInfo.menuWidth + this.sizeInfo.scrollBarWidth), "auto" === this.options.dropdownAlignRight && this.$menu.toggleClass(V.MENURIGHT, this.sizeInfo.selectOffsetLeft > this.sizeInfo.selectOffsetRight && this.sizeInfo.selectOffsetRight < this.sizeInfo.totalMenuWidth - c2), this.dropdown && this.dropdown._popper && this.dropdown._popper.update();
        }, setSize: function(e3) {
          if (this.liHeight(e3), this.options.header && this.$menu.css("padding-top", 0), false !== this.options.size) {
            var t2 = this, i2 = P(window);
            this.setMenuSize(), this.options.liveSearch && this.$searchbox.off("input.setMenuSize propertychange.setMenuSize").on("input.setMenuSize propertychange.setMenuSize", function() {
              return t2.setMenuSize();
            }), "auto" === this.options.size ? i2.off("resize" + j + "." + this.selectId + ".setMenuSize scroll" + j + "." + this.selectId + ".setMenuSize").on("resize" + j + "." + this.selectId + ".setMenuSize scroll" + j + "." + this.selectId + ".setMenuSize", function() {
              return t2.setMenuSize();
            }) : this.options.size && "auto" != this.options.size && this.selectpicker.current.elements.length > this.options.size && i2.off("resize" + j + "." + this.selectId + ".setMenuSize scroll" + j + "." + this.selectId + ".setMenuSize");
          }
          this.createView(false, true, e3);
        }, setWidth: function() {
          var i2 = this;
          "auto" === this.options.width ? requestAnimationFrame(function() {
            i2.$menu.css("min-width", "0"), i2.$element.on("loaded" + j, function() {
              i2.liHeight(), i2.setMenuSize();
              var e3 = i2.$newElement.clone().appendTo("body"), t2 = e3.css("width", "auto").children("button").outerWidth();
              e3.remove(), i2.sizeInfo.selectWidth = Math.max(i2.sizeInfo.totalMenuWidth, t2), i2.$newElement.css("width", i2.sizeInfo.selectWidth + "px");
            });
          }) : "fit" === this.options.width ? (this.$menu.css("min-width", ""), this.$newElement.css("width", "").addClass("fit-width")) : this.options.width ? (this.$menu.css("min-width", ""), this.$newElement.css("width", this.options.width)) : (this.$menu.css("min-width", ""), this.$newElement.css("width", "")), this.$newElement.hasClass("fit-width") && "fit" !== this.options.width && this.$newElement[0].classList.remove("fit-width");
        }, selectPosition: function() {
          this.$bsContainer = P('<div class="bs-container" />');
          function e3(e4) {
            var t2 = {}, i2 = r2.options.display || !!P.fn.dropdown.Constructor.Default && P.fn.dropdown.Constructor.Default.display;
            r2.$bsContainer.addClass(e4.attr("class").replace(/form-control|fit-width/gi, "")).toggleClass(V.DROPUP, e4.hasClass(V.DROPUP)), s2 = e4.offset(), l2.is("body") ? n2 = { top: 0, left: 0 } : ((n2 = l2.offset()).top += parseInt(l2.css("borderTopWidth")) - l2.scrollTop(), n2.left += parseInt(l2.css("borderLeftWidth")) - l2.scrollLeft()), o2 = e4.hasClass(V.DROPUP) ? 0 : e4[0].offsetHeight, (M.major < 4 || "static" === i2) && (t2.top = s2.top - n2.top + o2, t2.left = s2.left - n2.left), t2.width = e4[0].offsetWidth, r2.$bsContainer.css(t2);
          }
          var s2, n2, o2, r2 = this, l2 = P(this.options.container);
          this.$button.on("click.bs.dropdown.data-api", function() {
            r2.isDisabled() || (e3(r2.$newElement), r2.$bsContainer.appendTo(r2.options.container).toggleClass(V.SHOW, !r2.$button.hasClass(V.SHOW)).append(r2.$menu));
          }), P(window).off("resize" + j + "." + this.selectId + " scroll" + j + "." + this.selectId).on("resize" + j + "." + this.selectId + " scroll" + j + "." + this.selectId, function() {
            r2.$newElement.hasClass(V.SHOW) && e3(r2.$newElement);
          }), this.$element.on("hide" + j, function() {
            r2.$menu.data("height", r2.$menu.height()), r2.$bsContainer.detach();
          });
        }, setOptionStatus: function(e3) {
          var t2 = this;
          if (t2.noScroll = false, t2.selectpicker.view.visibleElements && t2.selectpicker.view.visibleElements.length) for (var i2 = 0; i2 < t2.selectpicker.view.visibleElements.length; i2++) {
            var s2 = t2.selectpicker.current.data[i2 + t2.selectpicker.view.position0], n2 = s2.option;
            n2 && (true !== e3 && t2.setDisabled(s2.index, s2.disabled), t2.setSelected(s2.index, n2.selected));
          }
        }, setSelected: function(e3, t2) {
          var i2, s2, n2 = this.selectpicker.main.elements[e3], o2 = this.selectpicker.main.data[e3], r2 = void 0 !== this.activeIndex, l2 = this.activeIndex === e3 || t2 && !this.multiple && !r2;
          o2.selected = t2, s2 = n2.firstChild, t2 && (this.selectedIndex = e3), n2.classList.toggle("selected", t2), l2 ? (this.focusItem(n2, o2), this.selectpicker.view.currentActive = n2, this.activeIndex = e3) : this.defocusItem(n2), s2 && (s2.classList.toggle("selected", t2), t2 ? s2.setAttribute("aria-selected", true) : this.multiple ? s2.setAttribute("aria-selected", false) : s2.removeAttribute("aria-selected")), l2 || r2 || !t2 || void 0 === this.prevActiveIndex || (i2 = this.selectpicker.main.elements[this.prevActiveIndex], this.defocusItem(i2));
        }, setDisabled: function(e3, t2) {
          var i2, s2 = this.selectpicker.main.elements[e3];
          this.selectpicker.main.data[e3].disabled = t2, i2 = s2.firstChild, s2.classList.toggle(V.DISABLED, t2), i2 && ("4" === M.major && i2.classList.toggle(V.DISABLED, t2), t2 ? (i2.setAttribute("aria-disabled", t2), i2.setAttribute("tabindex", -1)) : (i2.removeAttribute("aria-disabled"), i2.setAttribute("tabindex", 0)));
        }, isDisabled: function() {
          return this.$element[0].disabled;
        }, checkDisabled: function() {
          this.isDisabled() ? (this.$newElement[0].classList.add(V.DISABLED), this.$button.addClass(V.DISABLED).attr("aria-disabled", true)) : this.$button[0].classList.contains(V.DISABLED) && (this.$newElement[0].classList.remove(V.DISABLED), this.$button.removeClass(V.DISABLED).attr("aria-disabled", false));
        }, clickListener: function() {
          var C2 = this, t2 = P(document);
          function e3() {
            C2.options.liveSearch ? C2.$searchbox.trigger("focus") : C2.$menuInner.trigger("focus");
          }
          function i2() {
            C2.dropdown && C2.dropdown._popper && C2.dropdown._popper.state.isCreated ? e3() : requestAnimationFrame(i2);
          }
          t2.data("spaceSelect", false), this.$button.on("keyup", function(e4) {
            /(32)/.test(e4.keyCode.toString(10)) && t2.data("spaceSelect") && (e4.preventDefault(), t2.data("spaceSelect", false));
          }), this.$newElement.on("show.bs.dropdown", function() {
            3 < M.major && !C2.dropdown && (C2.dropdown = C2.$button.data("bs.dropdown"), C2.dropdown._menu = C2.$menu[0]);
          }), this.$button.on("click.bs.dropdown.data-api", function() {
            C2.$newElement.hasClass(V.SHOW) || C2.setSize();
          }), this.$element.on("shown" + j, function() {
            C2.$menuInner[0].scrollTop !== C2.selectpicker.view.scrollTop && (C2.$menuInner[0].scrollTop = C2.selectpicker.view.scrollTop), 3 < M.major ? requestAnimationFrame(i2) : e3();
          }), this.$menuInner.on("mouseenter", "li a", function(e4) {
            var t3 = this.parentElement, i3 = C2.isVirtual() ? C2.selectpicker.view.position0 : 0, s2 = Array.prototype.indexOf.call(t3.parentElement.children, t3), n2 = C2.selectpicker.current.data[s2 + i3];
            C2.focusItem(t3, n2, true);
          }), this.$menuInner.on("click", "li a", function(e4, t3) {
            var i3 = P(this), s2 = C2.$element[0], n2 = C2.isVirtual() ? C2.selectpicker.view.position0 : 0, o2 = C2.selectpicker.current.data[i3.parent().index() + n2], r2 = o2.index, l2 = z(s2), a2 = s2.selectedIndex, c2 = s2.options[a2], d2 = true;
            if (C2.multiple && 1 !== C2.options.maxOptions && e4.stopPropagation(), e4.preventDefault(), !C2.isDisabled() && !i3.parent().hasClass(V.DISABLED)) {
              var h2 = o2.option, p2 = P(h2), u2 = h2.selected, f2 = p2.parent("optgroup"), m2 = f2.find("option"), v2 = C2.options.maxOptions, g2 = f2.data("maxOptions") || false;
              if (r2 === C2.activeIndex && (t3 = true), t3 || (C2.prevActiveIndex = C2.activeIndex, C2.activeIndex = void 0), C2.multiple) {
                if (h2.selected = !u2, C2.setSelected(r2, !u2), C2.focusedParent.focus(), false !== v2 || false !== g2) {
                  var b2 = v2 < O(s2).length, w2 = g2 < f2.find("option:selected").length;
                  if (v2 && b2 || g2 && w2) if (v2 && 1 == v2) s2.selectedIndex = -1, h2.selected = true, C2.setOptionStatus(true);
                  else if (g2 && 1 == g2) {
                    for (var I2 = 0; I2 < m2.length; I2++) {
                      var x2 = m2[I2];
                      x2.selected = false, C2.setSelected(x2.liIndex, false);
                    }
                    h2.selected = true, C2.setSelected(r2, true);
                  } else {
                    var k2 = "string" == typeof C2.options.maxOptionsText ? [C2.options.maxOptionsText, C2.options.maxOptionsText] : C2.options.maxOptionsText, y2 = "function" == typeof k2 ? k2(v2, g2) : k2, $2 = y2[0].replace("{n}", v2), S2 = y2[1].replace("{n}", g2), E2 = P('<div class="notify"></div>');
                    y2[2] && ($2 = $2.replace("{var}", y2[2][1 < v2 ? 0 : 1]), S2 = S2.replace("{var}", y2[2][1 < g2 ? 0 : 1])), h2.selected = false, C2.$menu.append(E2), v2 && b2 && (E2.append(P("<div>" + $2 + "</div>")), d2 = false, C2.$element.trigger("maxReached" + j)), g2 && w2 && (E2.append(P("<div>" + S2 + "</div>")), d2 = false, C2.$element.trigger("maxReachedGrp" + j)), setTimeout(function() {
                      C2.setSelected(r2, false);
                    }, 10), E2[0].classList.add("fadeOut"), setTimeout(function() {
                      E2.remove();
                    }, 1050);
                  }
                }
              } else c2 && (c2.selected = false), h2.selected = true, C2.setSelected(r2, true);
              !C2.multiple || C2.multiple && 1 === C2.options.maxOptions ? C2.$button.trigger("focus") : C2.options.liveSearch && C2.$searchbox.trigger("focus"), d2 && (!C2.multiple && a2 === s2.selectedIndex || (T = [h2.index, p2.prop("selected"), l2], C2.$element.triggerNative("change")));
            }
          }), this.$menu.on("click", "li." + V.DISABLED + " a, ." + V.POPOVERHEADER + ", ." + V.POPOVERHEADER + " :not(.close)", function(e4) {
            e4.currentTarget == this && (e4.preventDefault(), e4.stopPropagation(), C2.options.liveSearch && !P(e4.target).hasClass("close") ? C2.$searchbox.trigger("focus") : C2.$button.trigger("focus"));
          }), this.$menuInner.on("click", ".divider, .dropdown-header", function(e4) {
            e4.preventDefault(), e4.stopPropagation(), C2.options.liveSearch ? C2.$searchbox.trigger("focus") : C2.$button.trigger("focus");
          }), this.$menu.on("click", "." + V.POPOVERHEADER + " .close", function() {
            C2.$button.trigger("click");
          }), this.$searchbox.on("click", function(e4) {
            e4.stopPropagation();
          }), this.$menu.on("click", ".actions-btn", function(e4) {
            C2.options.liveSearch ? C2.$searchbox.trigger("focus") : C2.$button.trigger("focus"), e4.preventDefault(), e4.stopPropagation(), P(this).hasClass("bs-select-all") ? C2.selectAll() : C2.deselectAll();
          }), this.$button.on("focus" + j, function(e4) {
            var t3 = C2.$element[0].getAttribute("tabindex");
            void 0 !== t3 && e4.originalEvent && e4.originalEvent.isTrusted && (this.setAttribute("tabindex", t3), C2.$element[0].setAttribute("tabindex", -1), C2.selectpicker.view.tabindex = t3);
          }).on("blur" + j, function(e4) {
            void 0 !== C2.selectpicker.view.tabindex && e4.originalEvent && e4.originalEvent.isTrusted && (C2.$element[0].setAttribute("tabindex", C2.selectpicker.view.tabindex), this.setAttribute("tabindex", -1), C2.selectpicker.view.tabindex = void 0);
          }), this.$element.on("change" + j, function() {
            C2.render(), C2.$element.trigger("changed" + j, T), T = null;
          }).on("focus" + j, function() {
            C2.options.mobile || C2.$button[0].focus();
          });
        }, liveSearchListener: function() {
          var u2 = this;
          this.$button.on("click.bs.dropdown.data-api", function() {
            u2.$searchbox.val() && (u2.$searchbox.val(""), u2.selectpicker.search.previousValue = void 0);
          }), this.$searchbox.on("click.bs.dropdown.data-api focus.bs.dropdown.data-api touchend.bs.dropdown.data-api", function(e3) {
            e3.stopPropagation();
          }), this.$searchbox.on("input propertychange", function() {
            var e3 = u2.$searchbox[0].value;
            if (u2.selectpicker.search.elements = [], u2.selectpicker.search.data = [], e3) {
              var t2 = [], i2 = e3.toUpperCase(), s2 = {}, n2 = [], o2 = u2._searchStyle(), r2 = u2.options.liveSearchNormalize;
              r2 && (i2 = w(i2));
              for (var l2 = 0; l2 < u2.selectpicker.main.data.length; l2++) {
                var a2 = u2.selectpicker.main.data[l2];
                s2[l2] || (s2[l2] = k(a2, i2, o2, r2)), s2[l2] && void 0 !== a2.headerIndex && -1 === n2.indexOf(a2.headerIndex) && (0 < a2.headerIndex && (s2[a2.headerIndex - 1] = true, n2.push(a2.headerIndex - 1)), s2[a2.headerIndex] = true, n2.push(a2.headerIndex), s2[a2.lastIndex + 1] = true), s2[l2] && "optgroup-label" !== a2.type && n2.push(l2);
              }
              l2 = 0;
              for (var c2 = n2.length; l2 < c2; l2++) {
                var d2 = n2[l2], h2 = n2[l2 - 1], p2 = (a2 = u2.selectpicker.main.data[d2], u2.selectpicker.main.data[h2]);
                ("divider" !== a2.type || "divider" === a2.type && p2 && "divider" !== p2.type && c2 - 1 !== l2) && (u2.selectpicker.search.data.push(a2), t2.push(u2.selectpicker.main.elements[d2]));
              }
              u2.activeIndex = void 0, u2.noScroll = true, u2.$menuInner.scrollTop(0), u2.selectpicker.search.elements = t2, u2.createView(true), (function(e4, t3) {
                e4.length || (_.noResults.innerHTML = this.options.noneResultsText.replace("{0}", '"' + S(t3) + '"'), this.$menuInner[0].firstChild.appendChild(_.noResults));
              }).call(u2, t2, e3);
            } else u2.selectpicker.search.previousValue && (u2.$menuInner.scrollTop(0), u2.createView(false));
            u2.selectpicker.search.previousValue = e3;
          });
        }, _searchStyle: function() {
          return this.options.liveSearchStyle || "contains";
        }, val: function(e3) {
          var t2 = this.$element[0];
          if (void 0 === e3) return this.$element.val();
          var i2 = z(t2);
          if (T = [null, null, i2], this.$element.val(e3).trigger("changed" + j, T), this.$newElement.hasClass(V.SHOW)) if (this.multiple) this.setOptionStatus(true);
          else {
            var s2 = (t2.options[t2.selectedIndex] || {}).liIndex;
            "number" == typeof s2 && (this.setSelected(this.selectedIndex, false), this.setSelected(s2, true));
          }
          return this.render(), T = null, this.$element;
        }, changeAll: function(e3) {
          if (this.multiple) {
            void 0 === e3 && (e3 = true);
            var t2 = this.$element[0], i2 = 0, s2 = 0, n2 = z(t2);
            t2.classList.add("bs-select-hidden");
            for (var o2 = 0, r2 = this.selectpicker.current.data, l2 = r2.length; o2 < l2; o2++) {
              var a2 = r2[o2], c2 = a2.option;
              c2 && !a2.disabled && "divider" !== a2.type && (a2.selected && i2++, true === (c2.selected = e3) && s2++);
            }
            t2.classList.remove("bs-select-hidden"), i2 !== s2 && (this.setOptionStatus(), T = [null, null, n2], this.$element.triggerNative("change"));
          }
        }, selectAll: function() {
          return this.changeAll(true);
        }, deselectAll: function() {
          return this.changeAll(false);
        }, toggle: function(e3) {
          (e3 = e3 || window.event) && e3.stopPropagation(), this.$button.trigger("click.bs.dropdown.data-api");
        }, keydown: function(e3) {
          var t2, i2, s2, n2, o2, r2 = P(this), l2 = r2.hasClass("dropdown-toggle"), a2 = (l2 ? r2.closest(".dropdown") : r2.closest(F.MENU)).data("this"), c2 = a2.findLis(), d2 = false, h2 = e3.which === H && !l2 && !a2.options.selectOnTab, p2 = G.test(e3.which) || h2, u2 = a2.$menuInner[0].scrollTop, f2 = true === a2.isVirtual() ? a2.selectpicker.view.position0 : 0;
          if (!(112 <= e3.which && e3.which <= 123)) if (!(i2 = a2.$newElement.hasClass(V.SHOW)) && (p2 || 48 <= e3.which && e3.which <= 57 || 96 <= e3.which && e3.which <= 105 || 65 <= e3.which && e3.which <= 90) && (a2.$button.trigger("click.bs.dropdown.data-api"), a2.options.liveSearch)) a2.$searchbox.trigger("focus");
          else {
            if (e3.which === A && i2 && (e3.preventDefault(), a2.$button.trigger("click.bs.dropdown.data-api").trigger("focus")), p2) {
              if (!c2.length) return;
              -1 !== (t2 = (s2 = a2.selectpicker.main.elements[a2.activeIndex]) ? Array.prototype.indexOf.call(s2.parentElement.children, s2) : -1) && a2.defocusItem(s2), e3.which === B ? (-1 !== t2 && t2--, t2 + f2 < 0 && (t2 += c2.length), a2.selectpicker.view.canHighlight[t2 + f2] || -1 === (t2 = a2.selectpicker.view.canHighlight.slice(0, t2 + f2).lastIndexOf(true) - f2) && (t2 = c2.length - 1)) : e3.which !== R && !h2 || (++t2 + f2 >= a2.selectpicker.view.canHighlight.length && (t2 = a2.selectpicker.view.firstHighlightIndex), a2.selectpicker.view.canHighlight[t2 + f2] || (t2 = t2 + 1 + a2.selectpicker.view.canHighlight.slice(t2 + f2 + 1).indexOf(true))), e3.preventDefault();
              var m2 = f2 + t2;
              e3.which === B ? 0 === f2 && t2 === c2.length - 1 ? (a2.$menuInner[0].scrollTop = a2.$menuInner[0].scrollHeight, m2 = a2.selectpicker.current.elements.length - 1) : d2 = (o2 = (n2 = a2.selectpicker.current.data[m2]).position - n2.height) < u2 : e3.which !== R && !h2 || (t2 === a2.selectpicker.view.firstHighlightIndex ? (a2.$menuInner[0].scrollTop = 0, m2 = a2.selectpicker.view.firstHighlightIndex) : d2 = u2 < (o2 = (n2 = a2.selectpicker.current.data[m2]).position - a2.sizeInfo.menuInnerHeight)), s2 = a2.selectpicker.current.elements[m2], a2.activeIndex = a2.selectpicker.current.data[m2].index, a2.focusItem(s2), a2.selectpicker.view.currentActive = s2, d2 && (a2.$menuInner[0].scrollTop = o2), a2.options.liveSearch ? a2.$searchbox.trigger("focus") : r2.trigger("focus");
            } else if (!r2.is("input") && !q.test(e3.which) || e3.which === D && a2.selectpicker.keydown.keyHistory) {
              var v2, g2, b2 = [];
              e3.preventDefault(), a2.selectpicker.keydown.keyHistory += C[e3.which], a2.selectpicker.keydown.resetKeyHistory.cancel && clearTimeout(a2.selectpicker.keydown.resetKeyHistory.cancel), a2.selectpicker.keydown.resetKeyHistory.cancel = a2.selectpicker.keydown.resetKeyHistory.start(), g2 = a2.selectpicker.keydown.keyHistory, /^(.)\1+$/.test(g2) && (g2 = g2.charAt(0));
              for (var w2 = 0; w2 < a2.selectpicker.current.data.length; w2++) {
                var I2 = a2.selectpicker.current.data[w2];
                k(I2, g2, "startsWith", true) && a2.selectpicker.view.canHighlight[w2] && b2.push(I2.index);
              }
              if (b2.length) {
                var x2 = 0;
                c2.removeClass("active").find("a").removeClass("active"), 1 === g2.length && (-1 === (x2 = b2.indexOf(a2.activeIndex)) || x2 === b2.length - 1 ? x2 = 0 : x2++), v2 = b2[x2], d2 = 0 < u2 - (n2 = a2.selectpicker.main.data[v2]).position ? (o2 = n2.position - n2.height, true) : (o2 = n2.position - a2.sizeInfo.menuInnerHeight, n2.position > u2 + a2.sizeInfo.menuInnerHeight), s2 = a2.selectpicker.main.elements[v2], a2.activeIndex = b2[x2], a2.focusItem(s2), s2 && s2.firstChild.focus(), d2 && (a2.$menuInner[0].scrollTop = o2), r2.trigger("focus");
              }
            }
            i2 && (e3.which === D && !a2.selectpicker.keydown.keyHistory || e3.which === L || e3.which === H && a2.options.selectOnTab) && (e3.which !== D && e3.preventDefault(), a2.options.liveSearch && e3.which === D || (a2.$menuInner.find(".active a").trigger("click", true), r2.trigger("focus"), a2.options.liveSearch || (e3.preventDefault(), P(document).data("spaceSelect", true))));
          }
        }, mobile: function() {
          this.options.mobile = true, this.$element[0].classList.add("mobile-device");
        }, refresh: function() {
          var e3 = P.extend({}, this.options, this.$element.data());
          this.options = e3, this.checkDisabled(), this.buildData(), this.setStyle(), this.render(), this.buildList(), this.setWidth(), this.setSize(true), this.$element.trigger("refreshed" + j);
        }, hide: function() {
          this.$newElement.hide();
        }, show: function() {
          this.$newElement.show();
        }, remove: function() {
          this.$newElement.remove(), this.$element.remove();
        }, destroy: function() {
          this.$newElement.before(this.$element).remove(), this.$bsContainer ? this.$bsContainer.remove() : this.$menu.remove(), this.selectpicker.view.titleOption && this.selectpicker.view.titleOption.parentNode && this.selectpicker.view.titleOption.parentNode.removeChild(this.selectpicker.view.titleOption), this.$element.off(j).removeData("selectpicker").removeClass("bs-select-hidden selectpicker"), P(window).off(j + "." + this.selectId);
        } };
        var J = P.fn.selectpicker;
        function Q() {
          if (P.fn.dropdown) return (P.fn.dropdown.Constructor._dataApiKeydownHandler || P.fn.dropdown.Constructor.prototype.keydown).apply(this, arguments);
        }
        P.fn.selectpicker = Z, P.fn.selectpicker.Constructor = Y, P.fn.selectpicker.noConflict = function() {
          return P.fn.selectpicker = J, this;
        }, P(document).off("keydown.bs.dropdown.data-api").on("keydown.bs.dropdown.data-api", ':not(.bootstrap-select) > [data-toggle="dropdown"]', Q).on("keydown.bs.dropdown.data-api", ":not(.bootstrap-select) > .dropdown-menu", Q).on("keydown" + j, '.bootstrap-select [data-toggle="dropdown"], .bootstrap-select [role="listbox"], .bootstrap-select .bs-searchbox input', Y.prototype.keydown).on("focusin.modal", '.bootstrap-select [data-toggle="dropdown"], .bootstrap-select [role="listbox"], .bootstrap-select .bs-searchbox input', function(e3) {
          e3.stopPropagation();
        }), P(window).on("load" + j + ".data-api", function() {
          P(".selectpicker").each(function() {
            var e3 = P(this);
            Z.call(e3, e3.data());
          });
        });
      }(e);
    });
  }
});
export default require_bootstrap_select_min();
/*! Bundled license information:

bootstrap-select/dist/js/bootstrap-select.min.js:
  (*!
   * Bootstrap-select v1.13.18 (https://developer.snapappointments.com/bootstrap-select)
   *
   * Copyright 2012-2020 SnapAppointments, LLC
   * Licensed under MIT (https://github.com/snapappointments/bootstrap-select/blob/master/LICENSE)
   *)
*/
//# sourceMappingURL=bootstrap-select_dist_js_bootstrap-select__min__js.js.map
